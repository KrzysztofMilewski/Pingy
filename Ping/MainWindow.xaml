<Window x:Class="Ping.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:util="clr-namespace:Ping.Utilities"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:local="clr-namespace:Ping"
        xmlns:vm="clr-namespace:Ping.ViewModel"
        xmlns:conv="clr-namespace:Ping.Converters"
        xmlns:behaviors="clr-namespace:Ping.Behaviors"
        mc:Ignorable="d"
        Title="Ping" Height="720" Width="1280"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        WindowStyle="None"
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen"
        >

    <Window.Resources>
        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="Menu">
                <EasingDoubleKeyFrame Value="70" KeyTime="0:0:0"/>
                <EasingDoubleKeyFrame Value="250" KeyTime="0:0:0.4"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="Menu">
                <EasingDoubleKeyFrame Value="250" KeyTime="0:0:0"/>
                <EasingDoubleKeyFrame Value="70" KeyTime="0:0:0.4"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <md:BooleanToVisibilityConverter x:Key="bool2vis"/>
        <md:BooleanToVisibilityConverter x:Key="reversedBool2vis" TrueValue="Collapsed" FalseValue="Visible"/>

        <conv:AveragePingToTextColorConverter x:Key="ping2color"/>
        <conv:ServerTypeNameToImageConverter x:Key="type2image"/>
        <conv:PacketsLostToColorConverter x:Key="packetslost2color"/>
        <conv:NameSplitterConverter x:Key="splitName"/>

        <SolidColorBrush x:Key="PrimaryHueLightBrushTransparent" Color="{Binding Path=Color, Source={StaticResource PrimaryHueLightBrush}}" Opacity="0.7"/>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.DataContext>
            <vm:PingStatusViewModel/>
        </Grid.DataContext>

        <Grid.InputBindings>
            <KeyBinding Key="Esc" Command="{Binding StopPinging}"/>
        </Grid.InputBindings>

        <md:Card Grid.Row="0" HorizontalAlignment="Stretch" 
                 VerticalAlignment="Stretch" Margin="-2,0" 
                 Background="{DynamicResource PrimaryHueDarkBrush}">
            <i:Interaction.Behaviors>
                <behaviors:ApplicationDragBehavior/>
            </i:Interaction.Behaviors>

            <Grid>
                <TextBlock Text="Ping" HorizontalAlignment="Center" FontSize="20"
                           VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>

                <Button 
                    Style="{DynamicResource MaterialDesignFloatingActionLightButton}"
                    Background="{x:Null}"
                    BorderBrush="{x:Null}"
                    HorizontalAlignment="Right"
                    Height="30" Width="30" Margin="0,0,10,0">

                    <i:Interaction.Behaviors>
                        <behaviors:ApplicationShutdownBehavior/>
                    </i:Interaction.Behaviors>

                    <md:PackIcon Kind="Close" Foreground="White" Height="30" Width="30" 
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"/>
                </Button>
            </Grid>
        </md:Card>

        <Grid Panel.ZIndex="10" Grid.Row="1" HorizontalAlignment="Left" Width="70" x:Name="Menu">

            <md:Card HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                     Background="{DynamicResource PrimaryHueMidBrush}"
                     Margin="-2,0,0,0">

                <ToggleButton VerticalAlignment="Top"
                          HorizontalAlignment="Right"
                          Style="{DynamicResource MaterialDesignHamburgerToggleButton}"
                          Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                          Width="70" Margin="0,10,0,0"
                          x:Name="MenuButton"
                          >
                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard Storyboard="{StaticResource OpenMenu}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
                        </EventTrigger>
                    </ToggleButton.Triggers>
                </ToggleButton>

            </md:Card>

            <TextBlock Text="Choose a game" HorizontalAlignment="Center"
                       Visibility="{Binding ElementName=MenuButton, Path=IsChecked, Converter={StaticResource bool2vis}}"
                       Margin="0,80,0,0"
                       FontSize="20"
                       Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                       />

            <ListBox Margin="0,140,0,0" 
                     IsEnabled="{Binding ElementName=MenuButton, Path=IsChecked}"
                     Width="250" Padding="0"
                     ItemsSource="{Binding AddressesGroups}"
                     SelectedItem="{Binding SelectedAddressGroup}">

                <i:Interaction.Behaviors>
                    <behaviors:MenuCloseOnLosingFocusBehavior/>
                </i:Interaction.Behaviors>

                <ListBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="ListBoxItem">
                        <Setter Property="Padding" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="230" Height="50" Margin="0,10,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Source="{Binding Converter={StaticResource type2image}}" 
                                   Width="70" Height="50"/>
                            <TextBlock 
                                   Grid.Column="1"
                                   Text="{Binding Converter={StaticResource splitName}}" 
                                   VerticalAlignment="Center"
                                   TextAlignment="Center"
                                   Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Button Content="Enter address manually"
                    VerticalAlignment="Bottom"
                    Style="{DynamicResource MaterialDesignRaisedAccentButton}"
                    Margin="10,0,10,50" Width="230"
                    Visibility="{Binding ElementName=MenuButton, Path=IsChecked,Converter={StaticResource bool2vis}}"
                    Command="{Binding SwitchToManualMode}">
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="MenuButton"
                                                               Storyboard.TargetProperty="(ToggleButton.IsChecked)">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                             Value="False"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>

        </Grid>

        <Grid Grid.Row="1" Margin="70,0,0,0" HorizontalAlignment="Stretch">
            
            <lvc:CartesianChart VerticalAlignment="Top" Margin="0,10,0,0" Height="580" Hoverable="False" DataTooltip="{x:Null}">
                <lvc:CartesianChart.Series>
                    <lvc:LineSeries Stroke="{DynamicResource PrimaryHueMidBrush}" 
                                    Fill="{DynamicResource PrimaryHueLightBrushTransparent}"
                                    Values="{Binding PingPoints}"
                                    LineSmoothness="0"
                                    />
                </lvc:CartesianChart.Series>
                <lvc:CartesianChart.AxisX>
                    <lvc:Axis Labels="" MinValue="2"/>
                </lvc:CartesianChart.AxisX>
                <lvc:CartesianChart.AxisY>
                    <lvc:Axis Title="Latency" LabelFormatter="{Binding Formatter}" MinValue="0">
                        <lvc:Axis.Separator>
                            <lvc:Separator Step="20"/>
                        </lvc:Axis.Separator>
                    </lvc:Axis>
                </lvc:CartesianChart.AxisY>
            </lvc:CartesianChart>

            <Grid VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="10">

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" 
                            VerticalAlignment="Stretch" Margin="0,0,0,10" Grid.Column="1"
                            Visibility="{Binding ManualMode, Converter={StaticResource reversedBool2vis}}"
                            IsEnabled="{Binding ManualMode, Converter={StaticResource reversedBool2vis}}">

                    <TextBlock Text="Choose a server:" Width="130" VerticalAlignment="Center" Margin="0,0,10,0"/>
                    <ComboBox Width="250" ItemsSource="{Binding ServerListForGroup}"
                              SelectedItem="{Binding SelectedAddress, Mode=TwoWay}"
                              IsSynchronizedWithCurrentItem="True"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch" 
                            Margin="0,0,0,10" Grid.Column="1"
                            Visibility="{Binding ManualMode, Converter={StaticResource bool2vis}}">

                    <TextBlock Text="IP address or endpoint's URL: " Width="200" VerticalAlignment="Center" Margin="0,0,10,0"/>

                    <TextBox Width="185" Margin="0,0,0,0" Text="{Binding AddressTypedManually}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Return" Command="{Binding StartPinging}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                </StackPanel>

                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Grid.Row="1" Grid.Column="1">
                    <Button Content="Start analyzing" Width="190" HorizontalAlignment="Right" Command="{Binding StartPinging}"/>

                    <Button Content="Stop pinging" HorizontalAlignment="Right" 
                            Margin="10,0,0,0" 
                            Width="190"
                            Command="{Binding StopPinging}"
                            Visibility="{Binding IsPinging, Converter={StaticResource bool2vis}}"
                            />
                </StackPanel>

                <TextBlock Foreground="{Binding AveragePing, Converter={StaticResource ping2color}}" 
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Margin="0,0,0,10"
                           >
                        Your average ping is 
                        <Run Text="{Binding AveragePing, Mode=OneWay, StringFormat={}{0:0.00}}"/>
                        ms
                </TextBlock>

                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                           Foreground="{Binding PacketsLost, Converter={StaticResource packetslost2color}}"
                           Grid.Row="1">
                        Packets lost: 
                        <Run Text="{Binding PacketsLost, Mode=OneWay}"/>
                        (<Run Text="{Binding PercentageOfLostPackets, Mode=OneWay, StringFormat={}{0:0.00}}" />%)
                </TextBlock>

            </Grid>
        </Grid>
    </Grid>
</Window>
